#정렬 알고리즘 중 삽입 정렬 알고리즘을 그림으로 설명하고 코드로 구현하시오.
#여기서는 코드를 구현하지는 말고, 알고리즘에 대한 설명을 글로 요약해보고 그것을 그림으로 설명해보시오.
#이 문제는 삽입 정렬 알고리즘을 이해하고 있는지 그리고 코드로 구현할 수 있는지를 묻는 문제이다.

#[!]: 삽입 정렬
#'삽입'이라는 단어에서 알 수 있듯이 정렬 대상이 자기 위치를 찾아서 들어간다(삽입)라는 의미이다.
#정렬 대상의 1번째 인덱스(두 번째) 값과 1-1번째(즉, 0번째) 시작으로 순회하면서 비교 및 자기 위치에 가서 삽입.
#구구단과 같이 중첩된 이중 반복문안에서 삽입 정렬이 이뤄진다. --> 따라서 반복은 n-1만큼 --> for i in range(1, len(lst)):
#첫 번째 반복문 --> 왼쪽에서 오른쪽으로 진행하면서 맨 끝까지 순회한다. --> 마치 구구단의 2단 부터 9단 까지 순회하듯이..
#두 번째 반복문 --> 오른쪽에서 왼쪽 끝까지 2개씩 값을 비교하면서 순회한다. --> 마치 2단의 1부터 9까지 순회하듯이..

#[1]: 초기 리스트 값 설정 --> 랜덤으로 설정해도 좋음.
lst = [4, 8, 1, 5, 7]
print('[1]삽입 정렬 전: ', lst)

#[2]: 반복문을 돌면서 자기 위치를 찾아가기 --> 삽입 정렬 알고리즘 --> for ~ while ~

# 4 8 1 5 7

for i in range(1, len(lst)): #리스트 요소가 5개이면 4번만 반복하면 됨
    #첫 번재 요소까지 역으로 진행하면서 삽입 위치 찾기
    while i > 0 and lst[i-1] > lst[i]: #왼쪽의 값디 더 크면 swap
        lst[i-1], lst[i] = lst[i], lst[i-1]
        i -= 1
        
#[3]: 최종 정렬된 리스트 값 출력
print('[3]삽입 정렬 후: ', lst)